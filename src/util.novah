module util

pub
readTestData : Int -> String
readTestData day =
  let file = format "./resources/day%s.txt" [toString day]
  IO.readText (IO.newFile file)

pub
readProcessTestData : Int -> String -> (String -> a) -> List a
readProcessTestData day regex mapper =
  readTestData day
    |> String.split regex
    |> List.map mapper

// add to stdlib along with zipWith
pub
zip : List a -> List b -> List (Tuple a b)
zip l1 l2 =
  let length = if List.size l1 > List.size l2 then List.size l2 else List.size l1
  let lin = []#linear()
  forEachRange 0 length \i ->
    addLast ((l1 ! i) <> (l2 ! i)) lin
  lin#forked()