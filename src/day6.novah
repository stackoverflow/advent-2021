module day6

import util as U

input : List Int64
input =
  U.readProcessTestData 6 "\\n" (String.split ",")
    |> _ ! 0
    |> List.map Int64#parseLong(_)

simulate : Int -> Int64
simulate days =
  let run daysleft (list : List Int64) =
    case daysleft of
      0 -> list
      _ ->
        [ list ! 1, list ! 2, list ! 3, list ! 4, list ! 5, list ! 6, (list ! 7) + (list ! 0), list ! 8, list ! 0]
          |> run (daysleft - 1)
  
  let data =
    List.withLinear (List.repeat 9 0L) \list ->
      List.forEach input \day ->
        updateAt (int day) (_ + 1L) list
  run days data |> List.foldl (+) 0L

pub
day6part1 : Unit -> Int64
day6part1 _ = simulate 80

pub
day6part2 : Unit -> Int64
day6part2 _ = simulate 256